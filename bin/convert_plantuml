#!/usr/bin/env ruby
require 'optparse'
require 'convert_plantuml'

# TODO: Add support for HTTP headers for input and server requests
#
# Return a structure describing the options.
#
def parse(args)
  options = {}
  opt_parser = OptionParser.new do |opts|
    opts.banner = "Usage: #{__FILE__} [options]"

    opts.separator ''
    opts.separator 'Specific options:'

    opts.on('-i', '--input [URI]',
            'The source uri for your PlantUML diagram. '\
            'If ommitted, STDIN will be used.') do |inputURI|
      options[:input] = inputURI
    end

    opts.on('o', '--output [FILENAME]',
            'The destination file name for your rendered PlantUML diagram. '\
            'If ommitted, STDOUT will be used.') do |outputFilename|
      options[:output] = outputFilename
    end

    opts.on('-s', '--server [URI]',
            'The server uri for rendering your PlantUML diagram. '\
            'The default is http://www.plantuml.com/plantuml/.') do |serverURI|
      options[:server] = (serverURI.end_with? '/') ? serverURI + '/' : serverURI
    end

    opts.on('-t', '--type [TYPE]', %w(png svg txt),
            'The output type (png, svg, txt). The default is png.') do |t|
      if t
        options[:type] = t
      else
        puts 'ERROR: Unknown type.'
        exit 1
      end
    end

    opts.on('-v', '--verbose', 'Run verbosely') do |v|
      options[:verbose] = v
    end

    opts.on_tail('-h', '--help', 'Show this message') do
      puts opts
      exit
    end

    # TODO: Add version
    # opts.on_tail("-V", "--version", "Show version") do
    #   puts ::Version.join('.')
    #   exit
    # end
  end

  opt_parser.parse!(args)
  options
end

ConvertPlantUML.convert(parse(ARGV))
